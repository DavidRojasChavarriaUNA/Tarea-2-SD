openapi: 3.0.0
info:
  title: Books, Authors and Publishers API
  description: This web service offers information on books, authors and publishers
  version: 1.0.0
servers:
- url: http://localhost:8080/
  description: web service published on localhost at port 8080
tags:
  - name: Books
    description: Api for books
  - name: Authors
    description: Api for Authors
  - name: Publishers
    description: Api for publishers
paths:
  /books:
    get:
      tags:
        - Books
      summary: Returns all books.
      operationId: booksAllGet
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
      x-swagger-router-controller: Books
    post:
      tags:
        - Books
      summary: Create a new book
      operationId: booksPOST
      requestBody:
        description: Book data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Books
  /books/{bookId}:
    get:
      tags:
        - Books
      summary: Returns a book by ID.
      operationId: booksBookIdGET
      parameters:
      - name: bookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
      x-swagger-router-controller: Books
    put:
      tags:
        - Books
      summary: Update book information
      operationId: booksBookIdPUT
      parameters:
      - name: bookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Book data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Books
    delete:
      tags:
        - Books
      summary: Delete a book by ID.
      operationId: booksBookIdDELETE
      parameters:
      - name: bookId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Books
  /authors:
    get:
      tags:
        - Authors
      summary: Returns all authors.
      operationId: authorsAllGet
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
      x-swagger-router-controller: Authors
    post:
      tags:
        - Authors
      summary: Create a new author
      operationId: authorsPOST
      requestBody:
        description: Author data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Authors
  /authors/{authorId}:
    get:
      tags:
        - Authors
      summary: Returns a author by ID.
      operationId: authorsAuthorIdGET
      parameters:
      - name: authorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
      x-swagger-router-controller: Authors
    put:
      tags:
        - Authors
      summary: Update author information
      operationId: authorAuthorIdPUT
      parameters:
      - name: authorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Book data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Authors
    delete:
      tags:
        - Authors
      summary: Delete a author by ID.
      operationId: authorAuthorIdDELETE
      parameters:
      - name: authorId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Authors
  /publishers:
    get:
      tags:
        - Publishers
      summary: Returns all publishers.
      operationId: publishersAllGet
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publisher'
      x-swagger-router-controller: Publishers
    post:
      tags:
        - Publishers
      summary: Create a new publisher
      operationId: publishersPOST
      requestBody:
        description: Publisher data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publisher'
        required: true
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Publishers
  /publishers/{publisherId}:
    get:
      tags:
        - Publishers
      summary: Returns a publisher by ID.
      operationId: publishersPublisherIdGET
      parameters:
      - name: publisherId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publisher'
      x-swagger-router-controller: Publishers
    put:
      tags:
        - Publishers
      summary: Update publisher information
      operationId: publisherPublisherIdPUT
      parameters:
      - name: publisherId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: Book data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publisher'
        required: true
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Publishers
    delete:
      tags:
        - Publishers
      summary: Delete a publisher by ID.
      operationId: publisherPublisherIdDELETE
      parameters:
      - name: publisherId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: OK
      x-swagger-router-controller: Publishers
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        edition:
          type: string
        copyright:
          type: integer
        language:
          type: string
        pages:
          type: integer
        author:
          type: string
        author_id:
          type: integer
        publisher:
          type: string
        publisher_id:
          type: integer
      example:
        id: 1
        title: "Operating System Concepts"
        edition: "9th"
        copyright: 2012
        language: "ENGLISH"
        pages: 976
        author: "Abraham Silberschatz"
        author_id: 1
        publisher: "John Wiley & Sons"
        publisher_id: 1
    SummaryBook:
      type: object
      properties:
        book_id:
          type: integer
        title:
          type: string
      example:
        book_id: 1
        title: "Operating System Concepts"
    Author:
      type: object
      properties:
        id:
          type: integer
        author:
          type: string
        nationality:
          type: string
        birth_year:
          type: integer
        fields:
          type: string
        books:
          type: array
          items:
            $ref: '#/components/schemas/SummaryBook'
      example:
        id: 1
        author: "Abraham Silberschatz"
        nationality: "Israelis / American"
        birth_year: 1952
        fields: "Database Systems, Operating Systems"
        books: 
          - {
              book_id: 1,
              title: "Operating System Concepts"
          }
          - {
              book_id: 2,
              title: "Database System Concepts"
          }
    Publisher:
      type: object
      properties:
        id:
          type: integer
        publisher:
          type: string
        country:
          type: string
        founded:
          type: integer
        genere:
          type: string
        books:
          type: array
          items:
            $ref: '#/components/schemas/SummaryBook'
      example:
        id: 1,
        publisher: "John Wiley & Sons"
        country: "United States"
        founded: 1807
        genere: "Academic"
        books: 
          - {
              book_id: 1,
              title: "Operating System Concepts"
            }
          - {
              book_id: 2,
              title: "Database System Concepts"
            }